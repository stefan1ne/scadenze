{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"E:/SviluppoProgetti/corsoReactDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"E:/SviluppoProgetti/corsoReactDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"E:/SviluppoProgetti/corsoReactDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"E:/SviluppoProgetti/corsoReactDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"E:/SviluppoProgetti/corsoReactDB/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Header from'./components/Header';import Footer from'./components/Footer';import Tasks from'./components/Tasks';import AddTask from'./components/AddTask';import About from'./components/About';var App=function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];useEffect(function(){var getTasks=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tasksFromServer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchTasks();case 2:tasksFromServer=_context.sent;setTasks(tasksFromServer);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getTasks(){return _ref.apply(this,arguments);};}();getTasks();},[]);// Fetch Tasks\nvar fetchTasks=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var res,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://localhost:5000/tasks');case 2:res=_context2.sent;_context2.next=5;return res.json();case 5:data=_context2.sent;data.sort(function(a,b){return new Date(a.mail)-new Date(b.mail);});console.log(data);return _context2.abrupt(\"return\",data);case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchTasks(){return _ref2.apply(this,arguments);};}();// Fetch Task\nvar fetchTask=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var res,data;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"http://localhost:5000/tasks/\".concat(id));case 2:res=_context3.sent;_context3.next=5;return res.json();case 5:data=_context3.sent;return _context3.abrupt(\"return\",data);case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchTask(_x){return _ref3.apply(this,arguments);};}();// Add Task\nvar addTask=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(task){var res,data;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return fetch('http://localhost:5000/tasks',{method:'POST',headers:{'Content-type':'application/json'},body:JSON.stringify(task)});case 2:res=_context4.sent;_context4.next=5;return res.json();case 5:data=_context4.sent;setTasks([].concat(_toConsumableArray(tasks),[data]));// const id = Math.floor(Math.random() * 10000) + 1\n// const newTask = { id, ...task }\n// setTasks([...tasks, newTask])\ncase 7:case\"end\":return _context4.stop();}}},_callee4);}));return function addTask(_x2){return _ref4.apply(this,arguments);};}();// Delete Task\nvar deleteTask=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id){var res;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"http://localhost:5000/tasks/\".concat(id),{method:'DELETE'});case 2:res=_context5.sent;//We should control the response status to decide if we will change the state or not.\nres.status===200?setTasks(tasks.filter(function(task){return task.id!==id;})):alert('Error Deleting This Task');case 4:case\"end\":return _context5.stop();}}},_callee5);}));return function deleteTask(_x3){return _ref5.apply(this,arguments);};}();// Toggle Reminder\nvar toggleReminder=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id){var taskToToggle,updTask,res,data;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return fetchTask(id);case 2:taskToToggle=_context6.sent;updTask=_objectSpread(_objectSpread({},taskToToggle),{},{reminder:!taskToToggle.reminder});_context6.next=6;return fetch(\"http://localhost:5000/tasks/\".concat(id),{method:'PUT',headers:{'Content-type':'application/json'},body:JSON.stringify(updTask)});case 6:res=_context6.sent;_context6.next=9;return res.json();case 9:data=_context6.sent;setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:data.reminder}):task;}));case 11:case\"end\":return _context6.stop();}}},_callee6);}));return function toggleReminder(_x4){return _ref6.apply(this,arguments);};}();return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsxs(_Fragment,{children:[showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):'No Tasks To Show']})}),/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{})})]}),/*#__PURE__*/_jsx(Footer,{})]})});};export default App;","map":{"version":3,"sources":["E:/SviluppoProgetti/corsoReactDB/src/App.js"],"names":["useState","useEffect","BrowserRouter","Router","Route","Routes","Header","Footer","Tasks","AddTask","About","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","fetchTasks","tasksFromServer","fetch","res","json","data","sort","a","b","Date","mail","console","log","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","status","filter","alert","toggleReminder","taskToToggle","updTask","reminder","map","length"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport About from './components/About'\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n    data.sort(function(a, b) {\r\n      return new Date(a.mail) - new Date(b.mail);\r\n    })\r\n    console.log(data)\r\n    return data\r\n  }\r\n\r\n  // Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = { id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // Delete Task\r\n  const deleteTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    //We should control the response status to decide if we will change the state or not.\r\n    res.status === 200\r\n      ? setTasks(tasks.filter((task) => task.id !== id))\r\n      : alert('Error Deleting This Task')\r\n  }\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id)\r\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updTask),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: data.reminder } : task\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div className='container'>\r\n        <Header\r\n          onAdd={() => setShowAddTask(!showAddTask)}\r\n          showAdd={showAddTask}\r\n        />\r\n        <Routes>\r\n          <Route\r\n            path='/'\r\n            element={\r\n              <>\r\n                {showAddTask && <AddTask onAdd={addTask} />}\r\n                {tasks.length > 0 ? (\r\n                  <Tasks\r\n                    tasks={tasks}\r\n                    onDelete={deleteTask}\r\n                    onToggle={toggleReminder}\r\n                  />\r\n                ) : (\r\n                  'No Tasks To Show'\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n          <Route path='/about' element={<About />} />\r\n        </Routes>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n"]},"metadata":{},"sourceType":"module"}